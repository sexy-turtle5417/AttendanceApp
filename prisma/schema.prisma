generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Guard{
  id String @id @default(uuid())
  firstname String
  middlename String?
  lastname String
  studentEntries StudentEntry[]
  studentExits StudentExit[]
}

model GradeLevel{
  level Int @id
  name String
  sections Section[]
}

model Section{
  id String @id @default(uuid())
  name String
  level Int
  gradeLevel GradeLevel @relation(fields: [level], references: [level], onDelete: Cascade)
  students Student[]
}
model Student{
  lrn Int @id
  firstname String
  middlename String?
  lastname String
  sectionId String
  section Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  studentEntries StudentEntry[]
}

model StudentEntry{
  id Int @id @default(autoincrement())
  studentLrn Int
  guardId String
  timeIn DateTime @default(now())
  student Student @relation(fields: [studentLrn], references: [lrn], onDelete: Cascade)
  guard Guard @relation(fields: [guardId], references: [id], onDelete: Cascade)
  studentExit StudentExit[]
}

model StudentExit{
  id Int @id @default(autoincrement())
  studentEntryId Int @unique
  guardId String
  timeOut DateTime @default(now())
  studentEntry StudentEntry @relation(fields: [studentEntryId], references: [id], onDelete: Cascade)
  guard Guard @relation(fields: [guardId], references: [id])
}